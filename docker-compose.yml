version: "3.9"

services:
  server:
    container_name: server
    image: nginx:alpine
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - ".:/var/www/html/"
      - "./config/infrastructure/nginx/conf.d/:/etc/nginx/conf.d/"
      - "./config/infrastructure/nginx/ssl/:/etc/nginx/ssl/"
      - "./config/infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - webapp
    ports:
      - "80:80"
      - "443:443"
    networks:
      - architecht_network

  webapp:
    build:
      context: .
      dockerfile: ./config/infrastructure/php/Dockerfile
    container_name: webapp
    env_file:
      - .env.local
    environment:
      TZ: "Europe/Berlin"
      DB_HOST: "citus-coordinator"  # Используем Citus
      DB_PORT: "5432"
      BLACKFIRE_SERVER_ID: dd891ebf-1d38-4c3f-9ca2-4a0d965ffbf1
      BLACKFIRE_SERVER_TOKEN: fbcef191cbb8212e67b738233604fabc4a1770c3577ba19b540165fa7932ee5d
    volumes:
      - ".:/var/www/html/"
      - "./config/infrastructure/php/blackfire.ini:/usr/local/etc/php/conf.d/blackfire.ini"
      - "./config/infrastructure/php/php.ini:/usr/local/etc/php/php.ini"
    depends_on:
      - citus-coordinator
      - rabbitmq
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - architecht_network

#  dbase:
#    container_name: dbase
#    image: postgres:15
#    restart: always
#    env_file:
#      - .env.local
#    environment:
#      POSTGRES_USER: "${DB_USER:-postgres}"
#      POSTGRES_PASSWORD: "${DB_PASSWORD:-password}"
#      POSTGRES_DB: "${DB_NAME:-app_db}"
#      TZ: "Europe/Berlin"
#    volumes:
#      - dbase_data:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
#    networks:
#      - architecht_network

  citus-coordinator:
    image: citusdata/citus:12.1.3
    container_name: citus-coordinator
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "app_db"
    ports:
      - "5433:5432"
    volumes:
      - citus_coordinator_data:/var/lib/postgresql/data
      - ./config/infrastructure/postgrespro/.pgpass:/root/.pgpass
    networks:
      - architecht_network

  citus-worker-1:
    image: citusdata/citus:12.1.3
    container_name: citus-worker-1
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      COORDINATOR_HOST: "citus-coordinator"
      CITUS_ROLE_NODE: "worker"
    volumes:
      - ./config/infrastructure/postgrespro/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    networks:
      - architecht_network

  citus-worker-2:
    image: citusdata/citus:12.1.3
    container_name: citus-worker-2
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      COORDINATOR_HOST: "citus-coordinator"
      CITUS_ROLE_NODE: "worker"
    volumes:
      - ./config/infrastructure/postgrespro/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    networks:
      - architecht_network


  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3.12-management"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      TZ: "Europe/Berlin"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - architecht_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: "app"
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_USERNAME:-root}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_PASSWORD:-rootpassword}"
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - architecht_network

  node_container:
    container_name: node_container
    build: ./frontend
    working_dir: /usr/src/app
    environment:
      TZ: "Europe/Berlin"
    volumes:
      - ./frontend:/usr/src/app
     # - node_modules:/usr/src/app/node_modules
    command: sh -c "npm run dev && node server.js"
    depends_on:
      - webapp
    ports:
      - "3005:3000"
    networks:
      - architecht_network

  blackfire:
    image: blackfire/blackfire
    ports:
      - 8707
    environment:
      BLACKFIRE_SERVER_ID: dd891ebf-1d38-4c3f-9ca2-4a0d965ffbf1
      BLACKFIRE_SERVER_TOKEN: fbcef191cbb8212e67b738233604fabc4a1770c3577ba19b540165fa7932ee5d
    networks:
      - architecht_network

  jmeter:
    image: justb4/jmeter:latest
    container_name: jmeter
    volumes:
      - ./tests/jmeter:/jmeter/testplans     # сюда клади .jmx-файлы
      - ./jmeter:/jmeter      # сюда будут лог-файлы
    working_dir: /jmeter
    entrypoint: [ "jmeter" ]
    networks:
      - architecht_network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - architecht_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - architecht_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - architecht_network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    command: ["--collector.zipkin.host-port=:9411"]
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
      COLLECTOR_ZIPKIN_ENABLED: "true"
    networks:
      - architecht_network

networks:
  architecht_network:
    external: true

volumes:
  citus_coordinator_data:
  rabbitmq_data:
  mongodb_data:
  node_modules:
  #dbase_data:
  esdata:
